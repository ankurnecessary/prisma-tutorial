// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  name           String
  age            Int             @default(0)
  email          String          @unique
  isAdmin        Boolean         @default(false)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @default(now())
  writtenPosts   Post[]          @relation("writtenPost")
  favouritePosts Post[]          @relation("favouritedPost")
  userPreference UserPreference?

  @@unique([name, age])
  @@index([email])
}

model UserPreference {
  id           String  @id @default(uuid())
  emailUpdates Boolean @default(false)
  user         User    @relation(fields: [userId], references: [id])
  userId       String  @unique
}

model Post {
  id             String     @id @default(uuid())
  title          String
  averageRating  Float
  author         User       @relation("writtenPost", fields: [authorId], references: [id])
  authorId       String
  favouritedBy   User?      @relation("favouritedPost", fields: [favouritedById], references: [id])
  favouritedById String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  categories     Category[]
}

model Category {
  id    String @id @default(uuid())
  name  String @unique
  posts Post[]
}
